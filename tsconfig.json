{
  "compilerOptions": {
    "target": "es5",
    "module": "commonjs",
    "allowUmdGlobalAccess": true,                     /* Allow accessing UMD globals from modules. */
    "resolveJsonModule": true,                        /* Enable importing .json files */
    "noResolve": false,                                /* Disallow `import`s, `require`s or `<reference>`s from expanding the number of files TypeScript should add to a project. */
    /* JavaScript Support */
    "allowJs": true,                                  /* Allow JavaScript files to be a part of your program. Use the `checkJS` option to get errors from these files. */
    "checkJs": false,                                  /* Enable error reporting in type-checked JavaScript files. */
    "maxNodeModuleJsDepth": 5,                        /* Specify the maximum folder depth used for checking JavaScript files from `node_modules`. Only applicable with `allowJs`. */
    "rootDir": "./",                                  /* Specify the root folder within your source files. */
    "outDir": "./dist",                                   /* Specify an output folder for all emitted files. */
    
    "strict": false,                                      /* Enable all strict type-checking options. */
     "noImplicitAny": false,                            /* Enable error reporting for expressions and declarations with an implied `any` type.. */
     "strictNullChecks": false,                         /* When type checking, take into account `null` and `undefined`. */
     "strictFunctionTypes": false,                      /* When assigning functions, check to ensure parameters and the return values are subtype-compatible. */
     "strictBindCallApply": false,                      /* Check that the arguments for `bind`, `call`, and `apply` methods match the original function. */
     "strictPropertyInitialization": false,             /* Check for class properties that are declared but not set in the constructor. */
     "noImplicitThis": false,                           /* Enable error reporting when `this` is given the type `any`. */
     "useUnknownInCatchVariables": true,               /* Type catch clause variables as 'unknown' instead of 'any'. */
     "alwaysStrict": false,                             /* Ensure 'use strict' is always emitted. */
     "noUnusedLocals": false,                           /* Enable error reporting when a local variables aren't read. */
     "noUnusedParameters": false,                       /* Raise an error when a function parameter isn't read */
    // "exactOptionalPropertyTypes": true,               /* Interpret optional property types as written, rather than adding 'undefined'. */
     "noImplicitReturns": false,                        /* Enable error reporting for codepaths that do not explicitly return in a function. */
     "jsx": "preserve",                                /* Specify what JSX code is generated. */
    "removeComments": true,                           /* Disable emitting comments. */
    // "noEmit": true,                                   /* Disable emitting files from a compilation. */
    "importHelpers": true,                            /* Allow importing helper functions from tslib once per project, instead of including them per-file. */
    "moduleResolution": "node",
    "experimentalDecorators": true,
    "skipLibCheck": true,
    "esModuleInterop": true,
    "isolatedModules": false,
    "allowSyntheticDefaultImports": true,
    "forceConsistentCasingInFileNames": false,            /* Ensure that casing is correct in imports. */
    "useDefineForClassFields": true,
    "sourceMap": true,
    "baseUrl": "./",



  },

  "exclude": [
    "node_modules",

  ]
}
